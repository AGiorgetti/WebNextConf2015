{
	"version": "0.1.0",
	// List of configurations. Add new configurations or edit existing ones.
	// ONLY "node" and "mono" are supported, change "type" to switch.
	"configurations": [
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Sample01",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/Sample01/app.js",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": null
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Sample01-ts",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/Sample01-ts/app.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		/*
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "02-classes",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/02-classes/app.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "03-namespaces",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/03-namespaces/app.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		*/
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "02-classes-arrow-function",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/02-classes/classes-arrow-function.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "02-classes-composition",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/02-classes/classes-composition.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "04-modules",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/04-modules/app.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "06-decorators",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/06-decorators/decorators.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "07-advanced-let-const",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/07-Advanced/let-const.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "07-advanced-destructring",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/07-Advanced/destructuring.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "07-advanced-for",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/07-Advanced/for_of.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "07-advanced-generators",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/07-advanced/generators.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			"runtimeArgs": ["--harmony"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "08-experimental-async-await",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "src/08-experimental/async-await.ts",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": ".",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			//"runtimeArgs": ["--nolazy"],
			"runtimeArgs": ["--harmony"],
			// Environment variables passed to the program.
			"env": { },
			// Use JavaScript source maps (if they exist).
			"sourceMaps": true,
			// If JavaScript source maps are enabled, the generated code is expected in this directory.
			"outDir": "build"
		},
		{
			"name": "Attach",
			"type": "node",
			// TCP/IP address. Default is "localhost".
			"address": "localhost",
			// Port to attach to.
			"port": 5858,
			"sourceMaps": true
		}
	]
}
